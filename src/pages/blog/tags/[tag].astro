---
import { getCollection } from 'astro:content';
import BaseLayout from '../../../layouts/BaseLayout.astro';
import { formatDate } from '../../../utils/date';

export async function getStaticPaths() {
  const allPosts = await getCollection('blog');
  const publishedPosts = allPosts.filter(post => !post.data.draft);
  
  const uniqueTags = [...new Set(publishedPosts.flatMap(post => post.data.tags))];
  
  return uniqueTags.map((tag) => {
    const filteredPosts = publishedPosts
      .filter(post => post.data.tags.includes(tag))
      .sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf());
    
    return {
      params: { tag },
      props: { posts: filteredPosts, tag },
    };
  });
}

const { posts, tag } = Astro.props;
---

<BaseLayout 
  title={`Posts tagged "${tag}" - fayaz.dev`}
  description={`All blog posts tagged with "${tag}". Explore related articles and insights.`}
>
  <div class="mx-auto max-w-4xl px-4 py-8 sm:px-6 lg:px-8">
    <!-- Breadcrumb -->
    <nav class="breadcrumb mb-8">
      <ol class="flex items-center space-x-2">
        <li><a href="/" class="text-primary-600 hover:text-primary-700">Home</a></li>
        <li><span class="breadcrumb-separator mx-2">→</span></li>
        <li><a href="/blog" class="text-primary-600 hover:text-primary-700">Blog</a></li>
        <li><span class="breadcrumb-separator mx-2">→</span></li>
        <li><span class="text-neutral-900 font-medium">#{tag}</span></li>
      </ol>
    </nav>

    <!-- Header -->
    <header class="mb-12">
      <h1 class="text-4xl font-bold text-neutral-900 mb-4">
        Posts tagged "{tag}"
      </h1>
      <p class="text-lg text-neutral-600">
        {posts.length} {posts.length === 1 ? 'post' : 'posts'} found
      </p>
    </header>

    <!-- Posts -->
    <div class="space-y-8">
      {posts.map((post, index) => (
        <article class="card rounded-lg p-6 animate-slide-up" style={`animation-delay: ${index * 0.1}s;`}>
          <div class="flex flex-wrap gap-2 mb-4">
            {post.data.tags.map(postTag => (
              <a 
                href={`/blog/tags/${postTag}`} 
                class={`tag text-sm ${postTag === tag ? 'bg-primary-600 text-white' : ''}`}
              >
                {postTag}
              </a>
            ))}
          </div>
          <h2 class="text-2xl font-semibold text-neutral-900 mb-3">
            <a href={`/blog/${post.slug}`} class="hover:text-primary-600 transition-colors">
              {post.data.title}
            </a>
          </h2>
          <p class="text-neutral-600 mb-4">
            {post.data.description}
          </p>
          <div class="flex items-center justify-between text-sm text-neutral-500">
            <time datetime={post.data.publishDate.toISOString()}>
              {formatDate(post.data.publishDate)}
            </time>
            <a
              href={`/blog/${post.slug}`}
              class="text-primary-600 hover:text-primary-700 font-medium transition-colors"
            >
              Read more →
            </a>
          </div>
        </article>
      ))}
    </div>

    <!-- Back to Blog -->
    <div class="mt-12 text-center">
      <a
        href="/blog"
        class="inline-flex items-center text-primary-600 hover:text-primary-700 font-medium transition-colors group"
      >
        <svg class="h-4 w-4 mr-2 transition-transform group-hover:-translate-x-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
        </svg>
        Back to all posts
      </a>
    </div>
  </div>
</BaseLayout>